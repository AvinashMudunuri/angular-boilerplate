{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/joke.service.ts","webpack:///./src/app/joke/joke.component.html","webpack:///./src/app/joke/joke.component.scss","webpack:///./src/app/joke/joke.component.ts","webpack:///./src/app/summary/summary.component.html","webpack:///./src/app/summary/summary.component.scss","webpack:///./src/app/summary/summary.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JokeComponent } from './joke/joke.component';\nimport { SummaryComponent } from './summary/summary.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/joke', pathMatch: 'full' },\n  { path: 'joke', component: JokeComponent },\n  { path: 'summary', component: SummaryComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- @TODO seperate nav in to shared components -->\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar navbar-dark bg-secondary\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Angular Boilerplate</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/joke\\\">Joke of the day<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/summary\\\">Summary</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <div class=\\\"text-center\\\">\\n    <img src=\\\"../assets/minion.png\\\" class=\\\"rounded\\\" alt=\\\"Joke of the day\\\">\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { JokeComponent } from './joke/joke.component';\nimport { SummaryComponent } from './summary/summary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JokeComponent,\n    SummaryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Joke } from './joke';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokeService {\n  joke: Joke;\n  constructor() { }\n  getJoke(): Joke {\n    return {\n      id: '12312313',\n      joke: 'asasas'\n    };\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <p class=\\\"card-text\\\">\\n        {{currentJoke.joke}}\\n      </p>\\n      <a href=\\\"#\\\" class=\\\"vote btn btn-success\\\" role=\\\"button\\\">Like</a>\\n      <a href=\\\"#\\\" class=\\\"vote btn btn-danger\\\" role=\\\"button\\\">Dislike</a>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".card .card-body .vote {\\n  display: inline-flex;\\n  margin: 6px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Joke } from '../joke';\nimport { JokeService } from '../joke.service';\n\n@Component({\n  selector: 'app-joke',\n  templateUrl: './joke.component.html',\n  styleUrls: ['./joke.component.scss']\n})\nexport class JokeComponent implements OnInit {\n  currentJoke: Joke;\n  constructor(private jokeService: JokeService) { }\n\n  ngOnInit() {\n    this.getJoke();\n  }\n\n  getJoke(): void {\n    console.log('before joke', this.currentJoke);\n    this.currentJoke = this.jokeService.getJoke();\n    console.log('after joke', this.currentJoke);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  summary works!\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss']\n})\nexport class SummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}